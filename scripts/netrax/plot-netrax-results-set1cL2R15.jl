###
using Pkg # to use functions that manage packages
Pkg.add("PhyloNetworks")
Pkg.add("PhyloPlots")
Pkg.add("Plots")
using PhyloNetworks
using PhyloPlots
using Plots

# For plotting networks and trees side-by-side
# Pkg.build("RCall")
Pkg.add("RCall")
using RCall
# displayedTrees(net0,0.41) |> length
###
#_______________________________________________________________________________
#
# Define starting trees and inferred networks.
#_______________________________________________________________________________
#_______________________________________________________________________________
#
# Define networks
#_______________________________________________________________________________

# The following are the 15 networks obtained from the the run
# multistart-set1cL2R15genes, along with the 15 rfnet starting trees. Each
# network was obtained by running netrax with the corresponding start tree.
# 
# We had to rename the hybrid nodes so that they start with a character not 0.
# To do this, I replaced '#' with '#H'
#
# The julia code in the next code block was generated by running the following
# shell commands from the directory /analysis/netrax/multistart-set1cL2R15genes/multistart-set1cL2R15genes_subruns/,
# and then renaming the hybrid nodes by replacing all instances of '#' with '#H'
# 
# for i in {0..14}
#     do
#         starting_tree=$(cat run_${i}_start_network.nw)
#         best_network=$(cat run_${i}_inferred_network.nw)
#         echo "starting_tree_${i}=readTopology(\"${starting_tree}\")"
#         echo ""
#         echo "net_${i}=readTopology(\"${best_network}\")"
#         echo ""
# done

### START CODE BLOCK 
starting_tree_0=readTopology("((((C33:0.0001075926,((C46:1e-06,Cooper:1e-06)89:0.0001075164,Titanium_IBR_MLV_vaccine:1e-06)71:0.0001073808):0.0009529325,216_II:0.0020718551)100:0.0035606439,((SP1777:0.0019007824,B589:0.0029292077)55:0.0006578643,K22:0.0027318003)96:0.0021089111)100:0,BHV5:0.1455588964)Root;")

net_0=readTopology("((BHV5:0.108206)#H1:0.182844::0.599184,(((((B589:0.0021761)#H0:0.00143434::0.255751,(K22:0.00159348)#H4:0.000900642::0.552064)96:0.00100981,((SP1777:0.00183156,#H4:1e-06::0.447936):0.000455758,#H0:1e-06::0.744249):0.000526608)55:0.00226556,((((Titanium_IBR_MLV_vaccine:8.06624e-05,((C46:1.13861e-05,(Cooper:0.000510173)#H5:0.00049411::0.309017)89:1.39817e-05,#H5:1e-06::0.690983):0.00010488)71:0.000147686,C33:0.000193029):0.00101676,(216_II:0.00186253)#H2:1e-06::0.707519):0.00291521)#H3:1e-06::0.831515):0.00580234,((#H1:1e-06::0.400816,#H2:0.000770334::0.292481):0.00105499,#H3:0.000908657::0.168485)100:0.00266356)100:0.000154042)Root;")

starting_tree_1=readTopology("((((C33:0.0003112504,((C46:1e-06,Cooper:1e-06)75:0.000103624,Titanium_IBR_MLV_vaccine:1e-06)97:0.0003110452):0.0005892692,216_II:0.0010732928)99:0.0039840953,((SP1777:0.0034964068,K22:0.0015368589)65:0.0011330429,B589:0.0018758648)88:0.002389662)100:0,BHV5:0.0797640174)Root;")

net_1=readTopology("((((((B589:0.000942188)#H5:0.0013511::0.526,((K22:0.00212703,((SP1777:0.000650978)#H4:0.00076682::0.831104,#H5:0.0017436::0.474):0.000721095):0.000274099)#H6:0.000334832::0.7458)88:0.00192178,#H4:0.00446637::0.168896):0.000955525,((((Titanium_IBR_MLV_vaccine:8.04037e-05,((C46:1.13671e-05,(Cooper:0.000506736)#H7:0.000490329::0.309017)75:1.38603e-05,#H7:1e-06::0.690983):0.000104179)97:0.000145875,C33:0.000193018):0.00101393,(216_II:0.00167863)#H2:1e-06::0.732362)99:0.00159588)#H3:0.00108333::0.732175)65:0.00426156,((((BHV5:0.0979658)#H1:0.000234269::0.332773,#H2:1e-06::0.267638):0.00397283,(#H3:0.00208635::0.267825,#H6:1e-06::0.2542):0.00117511):0.0025383,(#H1:0.115693::0.667227)#H0:0.000735337::0.601507)100:0.00246163):0.0975315,#H0:0.00415602::0.398493)Root;")

starting_tree_2=readTopology("((((C33:0.0001025349,((C46:1e-06,Cooper:0.0001022842)86:0.0001022842,Titanium_IBR_MLV_vaccine:1e-06)77:0.0001022881):0.000614284,216_II:0.0006154725)99:0.0022920544,((SP1777:0.0013363318,K22:0.0027721768)97:0.0006021676,B589:0.0021609983)99:0.0028830646)100:0,BHV5:0.1119495407)Root;")

net_2=readTopology("(((BHV5:0.111817)#H0:0.0817957::0.667364)#H1:0.116963::0.384485,(((((((((B589:0.00124216)#H6:0.000594058::0.799702,(K22:0.00135619)#H8:1e-06::0.391218):0.000380162,((((216_II:0.00172605,((((Titanium_IBR_MLV_vaccine:8.04307e-05,((C46:1.13852e-05,(Cooper:0.000507649)#H7:0.000491176::0.309017)86:1.38889e-05,#H7:1e-06::0.690983):0.000104405)77:0.000146194,C33:0.000193442):0.000274071)#H2:0.000261928::0.849189)#H4:0.000467221::0.854087)99:0.00286826,#H0:2e-06::0.332636):0.000383507,(#H1:1e-06::0.615515,#H4:0.000518026::0.145913):0.00419968)100:0.0019923)#H3:1e-06::0.704405):0.000644351,(SP1777:0.00163346)#H5:1e-06::0.73893):0.000630916,#H8:0.000987493::0.608782)99:0.00110109,#H6:0.00103401::0.200298):0.000617288,#H5:0.000861608::0.26107)97:0.00343457,#H2:0.0030538::0.150811):0.00343457,#H3:0.001617::0.295595):1e-06)Root;")

starting_tree_3=readTopology("((((C33:0.0002024656,((C46:1e-06,Cooper:1e-06)31:1e-06,Titanium_IBR_MLV_vaccine:1e-06)99:0.0005082082):0.0008295653,216_II:0.0014284121)100:0.00336464,((SP1777:0.002290569,B589:0.0012746592)44:0.0002988825,K22:0.0012089048)84:0.0014656146)100:0,BHV5:0.0916832599)Root;")

net_3=readTopology("((((BHV5:0.0693858)#H8:0.0565516::0.934345)#H1:0.0802647::0.685325,(((((((B589:0.00241111,(((((K22:0.000878567)#H7:0.00106638::0.0642458,((((Titanium_IBR_MLV_vaccine:8.04759e-05,((C46:1.1351e-05,(Cooper:0.000503058)#H6:0.000495537::0.309017)31:1.40033e-05,#H6:1e-06::0.690983):0.00010422)99:0.000145938,C33:0.000193607):0.000552359)#H5:0.0006086::0.255806)#H2:0.00392025::0.516273)100:0.000369684,((216_II:0.000737043,#H8:1e-06::0.0656548):0.00114762,#H5:0.0004676::0.744194)100:0.00263519):0.00125937,#H1:1e-06::0.314675):0.00179211)#H3:1e-06::0.721614):0.000505092,(SP1777:0.00182465)#H4:1e-06::0.760081):0.000545904,#H7:0.00104338::0.935754)84:0.00154544,#H4:0.000904143::0.239919)44:0.00295825,#H2:0.000663839::0.483727):0.00295825,#H3:0.00109864::0.278386):6.2441e-05)#H0:1e-06::0.514766):0.11319,#H0:6.2441e-05::0.485234)Root;")

starting_tree_4=readTopology("((((C33:1e-06,((C46:0.0001111668,Titanium_IBR_MLV_vaccine:0.0001120676)50:1e-06,Cooper:1e-06)44:1e-06):0.0009608059,216_II:0.0018032612)100:0.0046140827,(SP1777:0.0017475958,(B589:0.0035924528,K22:0.001765342)45:0.0007333705)53:0.0023280433)100:0,BHV5:0.1610885007)Root;")

net_4=readTopology("((BHV5:0.104464)#H0:0.186929::0.662075,(((K22:0.00212309,((((((#H0:2e-06::0.337925,(216_II:0.00163487)#H1:1e-06::0.273911):0.00730999,(((Titanium_IBR_MLV_vaccine:8.0858e-05,((C46:1.13125e-05,(Cooper:0.000510004)#H4:0.000495699::0.35518)44:1.41199e-05,#H4:1e-06::0.64482):0.000104657)50:0.000146405,C33:0.000194616):0.00105393,#H1:1e-06::0.726089):0.00294395)100:0.00247471)#H2:1e-06::0.823495,(B589:0.00170421)#H5:0.00123005::0.588811):0.000564471,(SP1777:0.00177539)#H3:1e-06::0.760081):0.000512676,#H5:1e-06::0.411189):9.54705e-05)45:0.00135271,#H3:0.000933256::0.239919)53:0.00566175,#H2:0.00145841::0.176505)100:1e-06)Root;")

starting_tree_5=readTopology("((((C33:0.0002026845,((C46:1e-06,Cooper:1e-06)51:1e-06,Titanium_IBR_MLV_vaccine:0.000101274)63:0.000101208):0.0004067534,216_II:0.0011222559)87:0.0029564701,((SP1777:0.0012086534,B589:0.000517245)52:0.0001005306,K22:0.0008224338)98:0.0010183474)100:0,BHV5:0.081771483)Root;")

net_5=readTopology("((((BHV5:0.054224)#H2:0.131788::0.593807)#H0:1e-06::0.432093,((#H0:0.0491013::0.567907,#H2:1e-06::0.406193):0.0411466)#H1:0.0350461::0.28995):0.0205733,(((((((K22:0.00130139,(((#H1:1e-06::0.71005,(216_II:0.000748013)#H3:0.00187717::0.268308):0.00276992,((((Titanium_IBR_MLV_vaccine:8.00005e-05,((C46:1.13189e-05,(Cooper:0.000506391)#H7:0.000490442::0.309017)51:1.39278e-05,#H7:1e-06::0.690983):0.000104254)63:0.000145791,C33:0.000192812):0.00102709,#H3:0.000920081::0.731692)87:0.00305687)#H4:0.000696185::0.168685)100:0.00162782)#H5:0.00551896::0.307231):0.000612926,(B589:0.00171503)#H8:1e-06::0.336951):0.000387906,(SP1777:0.00108401)#H6:0.000893941::0.824674):0.000715821,#H8:0.00133214::0.663049)98:0.00193912,#H6:0.00135434::0.175326)52:0.000381823,#H4:1e-06::0.831315):0.00655561,#H5:0.00271014::0.692769):7.71738e-05)Root;")

starting_tree_6=readTopology("(((((C33:0.0002052599,(C46:1e-06,Cooper:1e-06)88:0.0001026059):1e-06,Titanium_IBR_MLV_vaccine:0.0001020788)42:0.0014363744,216_II:0.0026860007)99:0.0040400637,(SP1777:0.0008613221,(B589:0.001642882,K22:0.0005178683)67:0.0005110739)70:0.0009228608)85:0,BHV5:0.1253834576)Root;")

net_6=readTopology("(((BHV5:0.112003)#H1:0.0827767::0.66519)#H0:0.108848::0.385064,(((((((Titanium_IBR_MLV_vaccine:8.05244e-05,((C46:1.13034e-05,(Cooper:0.00051266)#H6:0.000490081::0.309017)88:1.41904e-05,#H6:1e-06::0.690983):0.000104599)42:0.000146659,C33:0.000193932):0.00107072,(216_II:0.000784883)#H5:0.000883892::0.729456)99:0.00149714)#H2:0.00156986::0.380424,(SP1777:0.00156313)#H4:0.000883983::0.256581)70:0.000552151,(((B589:0.00218551,(((((#H5:0.00244812::0.270544,#H1:1e-06::0.33481):0.00180551,#H0:0.00188656::0.614936)85:0.000696194,#H2:0.00177766::0.619576):0.00170538,(K22:0.00125006)#H7:0.000183472::0.413388):0.000194653)#H3:1e-06::0.595583):0.000699618,#H4:1e-06::0.743419):0.000609853,#H7:0.00101721::0.586612)67:0.00213153):0.0052474,#H3:0.00279673::0.404417):1e-06)Root;")

starting_tree_7=readTopology("((((C33:0.0001022362,((C46:1e-06,Cooper:1e-06)39:1e-06,Titanium_IBR_MLV_vaccine:1e-06)98:0.0003074831):0.0006125736,216_II:0.0018552627)99:0.0025601077,((SP1777:0.0008757947,B589:0.0015921503)54:0.0003095133,K22:0.0018986201)65:0.000591737)100:0,BHV5:0.0765693439)Root;")

net_7=readTopology("((((((B589:0.000942241)#H5:0.00135105::0.526004,((K22:0.00212702,((SP1777:0.000650995)#H4:0.000766804::0.831104,#H5:0.00174355::0.473996):0.00072106):0.000274274)#H6:0.000334637::0.7458)65:0.00192182,#H4:0.00446626::0.168896):0.000955258,((((Titanium_IBR_MLV_vaccine:8.04037e-05,((C46:1.13672e-05,(Cooper:0.000506733)#H7:0.000490329::0.309017)39:1.38602e-05,#H7:1e-06::0.690983):0.000104179)98:0.000145873,C33:0.000193018):0.00101395,(216_II:0.00167864)#H2:1e-06::0.732362)99:0.0015962)#H3:0.00108334::0.732167)54:0.00426142,((((BHV5:0.0979735)#H1:0.000234263::0.332772,#H2:1e-06::0.267638):0.0039728,(#H3:0.00208502::0.267833,#H6:1e-06::0.2542):0.00117506):0.0025388,(#H1:0.115677::0.667228)#H0:0.000734727::0.601508)100:0.00246155):0.0975133,#H0:0.00415594::0.398492)Root;")

starting_tree_8=readTopology("(((((C33:0.0002028288,(C46:1e-06,Titanium_IBR_MLV_vaccine:1e-06)47:1e-06):1e-06,Cooper:1e-06)47:0.001868581,((SP1777:0.001033178,B589:0.0015098249)76:0.0004275657,K22:0.0014868618)100:0.0036582704)100:0.0088675201,216_II:0.0015855614)100:0,BHV5:0.0557668951)Root;")

net_8=readTopology("((BHV5:0.101308)#H0:0.197497::0.664536,(((K22:0.00212084,((((((#H0:2e-06::0.335464,(216_II:0.00163228)#H1:1e-06::0.251602):0.00733577,(((Titanium_IBR_MLV_vaccine:8.07634e-05,((C46:1.12971e-05,(Cooper:0.000509434)#H4:0.000495129::0.358613)47:1.41097e-05,#H4:1e-06::0.641387):0.000104559)47:0.000146131,C33:0.000194541):0.00104969,#H1:1e-06::0.748398):0.00297754)100:0.00241478)#H2:1e-06::0.823954,(B589:0.0017003)#H5:0.00122936::0.588972):0.000566731,(SP1777:0.00177318)#H3:1e-06::0.760081):0.000511578,#H5:1e-06::0.411028):9.51444e-05)100:0.00134306,#H3:0.00093521::0.239919)76:0.0056242,#H2:0.00163538::0.176046)100:1e-06)Root;")

starting_tree_9=readTopology("((((C33:0.0002017643,((C46:1e-06,Cooper:0.0001507596)40:1e-06,Titanium_IBR_MLV_vaccine:0.0001000133)70:0.0001505655):0.0017208758,216_II:0.0021280708)100:0.0022690128,((SP1777:0.0012912648,K22:0.0007338807)96:0.0005947474,B589:0.0012128374)96:0.0012024203)100:0,BHV5:0.0703914625)Root;")

net_9=readTopology("(((BHV5:0.0977923)#H1:0.000185231::0.663485)100#H0:0.0984321::0.415936,((((((B589:0.00094049)#H5:0.00135135::0.525699,((K22:0.00212158,((SP1777:0.000649217)#H4:0.000767019::0.831105,#H5:0.00174332::0.474301):0.000721299):0.000339882)#H6:0.000277238::0.7458)96:0.00198307,#H4:0.00446::0.168895):0.000655942,((((Titanium_IBR_MLV_vaccine:8.04228e-05,((C46:1.13639e-05,(Cooper:0.000507081)#H7:0.000490815::0.309017)40:1.38836e-05,#H7:1e-06::0.690983):0.000104126)70:0.00014604,C33:0.00019306):0.0010207,(216_II:0.00168043)#H2:1e-06::0.732362)100:0.00196083)#H3:0.00108407::0.732532)96:0.00477346,((#H1:5.85758e-05::0.336515,#H2:1e-06::0.267638):0.0040147,(#H3:0.00117375::0.267468,#H6:1e-06::0.2542):0.00117375):0.00448703):0.11501,100#H0:0.000185231::0.584064):0.00413303)Root;")

starting_tree_10=readTopology("((((((C33:0.0005452134,((C46:1e-06,Cooper:0.0027029876)73:0.0001114867,Titanium_IBR_MLV_vaccine:1e-06)61:0.0001107648):0.0015466297,216_II:0.0026107105)100:0.0072156557,K22:0.0022206831)100:0.0005489902,SP1777:0.0022373261)39:0.0024312434,B589:0.0016780093)82:0,BHV5:0.1801567263)Root;")

net_10=readTopology("(((BHV5:0.101657)#H1:0.075241::0.649237)#H0:0.121519::0.793514,(B589:0.00169431,((((K22:0.000198849,(((#H1:1e-06::0.350763,(216_II:0.000614487)#H2:1e-06::0.265408):0.00496613,(((((Titanium_IBR_MLV_vaccine:8.00946e-05,((C46:1.13267e-05,(Cooper:0.000504066)#H6:0.000491683::0.309017)73:1.39319e-05,#H6:1e-06::0.690983):0.000104011)61:0.000142012,C33:0.000196394):0.000979575,#H2:0.00111935::0.734592):0.00259462,#H0:0.000931562::0.206486)100:0.000217685)#H4:0.00132513::0.101324):0.00303352)#H7:1e-06::0.135527):0.00187549,(((#H4:3.38686e-05::0.898676,#H7:0.00303352::0.864473):0.00215774)#H3:0.00208513::0.468564,(SP1777:0.0017856)#H5:0.000826044::0.33782)39:0.00101715)100:0.000581983,#H5:1e-06::0.66218):0.000530457,#H3:1e-06::0.531436):0.00050823)82:1e-06)Root;")

starting_tree_11=readTopology("(((((((C33:0.0001278688,(C46:0.0002457559,Titanium_IBR_MLV_vaccine:0.000492615)57:0.0001231473):0.0002807923,Cooper:0.0040698972)67:0.0070066542,216_II:0.0076060834)99:0.0114181625,SP1777:0.0047859924)84:0.0031239141,K22:0.0053371972)69:0.0029518878,B589:0.0025203874)55:0,BHV5:0.3096448551)Root;")

net_11=readTopology("(((BHV5:0.0933039)#H1:0.0837744::0.664417)#H0:0.148134::0.802441,((((K22:0.00021447,(((#H1:1e-06::0.335583,(216_II:0.000779181)99#H2:0.000109998::0.267792):0.00470322,((((Titanium_IBR_MLV_vaccine:7.9859e-05,((C46:1.13175e-05,(Cooper:0.000502888)#H6:0.000492466::0.309017)67:1.38295e-05,#H6:1e-06::0.690983):0.000104097)57:0.000142303,C33:0.000195722):0.00102439,99#H2:0.000925563::0.732208):0.00242082)#H4:0.00136148::0.174288):0.00394651)#H7:1e-06::0.115443):0.00201411,((((#H0:1e-06::0.197559,#H7:0.00213518::0.884557):0.000673591,#H4:3e-06::0.825712):0.00165876,(SP1777:0.00143855)#H3:0.003205::0.204961)84:0.00135004,(B589:0.000384545)#H5:0.00198609::0.468416):0.000573798)69:0.000685722,#H3:1e-06::0.795039):0.000993039,#H5:0.00126039::0.531584)55:1e-06)Root;")

starting_tree_12=readTopology("((((C33:0.0003229201,((C46:1e-06,Cooper:1e-06)99:0.0053879491,Titanium_IBR_MLV_vaccine:1e-06)67:0.0001063017):0.0014020958,216_II:0.0010243712)100:0.0044807657,((SP1777:0.0030365666,B589:0.0036162589)95:0.0011776395,K22:0.0027171067)100:0.0059577435)100:0,BHV5:0.2007934453)Root;")

net_12=readTopology("((BHV5:0.101342)#H0:0.193285::0.731276,(((((K22:0.00162591)#H4:0.000909433::0.515402,(B589:0.00219676)#H3:0.00145035::0.262008)100:0.0010262,((SP1777:0.00186657,#H4:1e-06::0.484598):0.000455781,#H3:1e-06::0.737992):0.000525617)95:0.00149516,(((((Titanium_IBR_MLV_vaccine:8.1479e-05,((C46:1.14955e-05,(Cooper:0.000515864)#H5:0.000499519::0.309017)99:1.40863e-05,#H5:1e-06::0.690983):0.000105739)67:0.000147812,C33:0.000196233):0.00108099,(216_II:0.00165122)#H1:1e-06::0.726089):0.00278553,(#H0:2e-06::0.268724,#H1:1e-06::0.273911):0.00730338)100:0.00124748)#H2:1e-06::0.767117):0.0040143,#H2:0.00270724::0.232883)100:1e-06)Root;")

starting_tree_13=readTopology("(((((C33:0.0002522926,(C46:0.000125235,Cooper:0.0020365621)88:0.0003048296):0.0001416097,Titanium_IBR_MLV_vaccine:0.0002514424)55:0.0049161501,216_II:0.0058779409)99:0.007948343,(SP1777:0.0050755476,(B589:0.0080268102,K22:0.0040722709)59:0.0032538998)61:0.00760863)98:0,BHV5:0.3689174895)Root;")

net_13=readTopology("((BHV5:0.0909707)#H0:0.223919::0.802291,((((K22:0.00246623,B589:0.00293133)59:0.000692866,SP1777:0.00219077)61:0.00276935,((((Titanium_IBR_MLV_vaccine:8.24188e-05,(Cooper:0.00100879,C46:1.60389e-05)88:0.000115215)55:0.000149829,C33:0.000197621):0.00104252,(216_II:0.00180696)#H1:1e-06::0.698176):0.00297813)#H2:1e-06::0.825798):0.00485312,((#H0:1e-06::0.197709,#H1:0.000250814::0.301824):0.00258101,#H2:0.000906751::0.174202)99:0.00325257)98:1e-06)Root;")

starting_tree_14=readTopology("((((((C33:1e-06,(C46:1e-06,Titanium_IBR_MLV_vaccine:1e-06)45:1e-06):0.000278711,Cooper:0.0048947391)65:0.0105593768,SP1777:0.0009384506)100:0.0024578223,B589:0.0035086102)96:0.0031637441,(216_II:0.0080948663,K22:0.0013565419)84:0.0030261937)79:0,BHV5:0.1478078612)Root;")

        net_14=readTopology("(((BHV5:0.0913577)#H2:0.0773074::0.729405)#H1:0.158049::0.377158,((((((K22:0.000200126,((((216_II:0.0016515)#H0:1e-06::0.274538,#H2:0.000501566::0.270595)84:0.00246461,#H1:0.0683748::0.622842):0.00246461)#H5:1e-06::0.0838881):0.0019819,((((((((C46:1.14028e-05,(Cooper:0.000510044)#H6:0.000493553::0.309017)45:1.40829e-05,#H6:1e-06::0.690983):0.000105069,Titanium_IBR_MLV_vaccine:8.06293e-05)65:0.000140885,C33:0.000200583):0.00102017,#H0:1e-06::0.725462):0.00292374,#H5:0.00252224::0.916112):0.00240576)#H3:0.0066578::0.244117,(SP1777:0.00173009)#H4:0.00101698::0.285904)100:0.00239163)79:4.03563e-05,(B589:0.00133609)#H7:1e-06::0.33652):0.000426314,#H4:1e-06::0.714096):0.000560127,#H3:1e-06::0.755883)96:0.000935775,#H7:0.000764481::0.66348):0.000690377)Root;")
        
# Define vectors of trees/networks
inferred_networks=[net_0, net_1, net_2, net_3, net_4, net_5, net_6, net_7, net_8,net_9, net_10, net_11, net_12, net_13, net_14]

starting_trees=[starting_tree_0, starting_tree_1, starting_tree_2, starting_tree_3, starting_tree_4, starting_tree_5, starting_tree_6, starting_tree_7, starting_tree_8, starting_tree_9, starting_tree_10, starting_tree_11, starting_tree_12, starting_tree_13, starting_tree_14]

# Remove all three cycles from the networks
for network in inferred_networks
    shrink3cycles!(network,false) # why false? I have no idea what that option does.
end



function rotateMultiple!(H::HybridNetwork,V::Vector{Int64})
    for v in V
        PhyloNetworks.rotate!(H,v)
    end
    #PhyloPlots.plot(H, useedgelength=false, showedgenumber=true, shownodenumber=true, showgamma=true, arrowlen=0.1)
end


# Reroot the output networks as closely to BHV5 as possible
PhyloNetworks.rootatnode!(net_1,23)
PhyloNetworks.rootatnode!(net_2,-11)
PhyloNetworks.rootatnode!(net_5,-8)
PhyloNetworks.rootatnode!(net_6,-19)
PhyloNetworks.rootatnode!(net_7,23)
PhyloNetworks.rootatnode!(net_14,23)

# Apply cosmetic changes to networks
rotateMultiple!(net_0,[21,-5,7,-11,-13])
rotateMultiple!(net_1,[19,-9,-10,-3,17,23,-24])
rotateMultiple!(net_2,[-26]) # this one is still tangled
rotateMultiple!(net_3,[-14,-15,-26,16])
rotateMultiple!(net_4,[-14,19])
rotateMultiple!(net_5,[23,-13,17])
rotateMultiple!(net_6,[-22,-18,-6])
rotateMultiple!(net_7,[19,-3,23,-24,17,7,-5])
rotateMultiple!(net_8,[-14,20,-8])
rotateMultiple!(net_9,[10,-24,-8,-23])
rotateMultiple!(net_10,[-2,21,-11,-12])
# don't see how to untangle net_11 :(
rotateMultiple!(net_12,[-2,-21,9,7])
rotateMultiple!(net_13,[-2,17,-15])
rotateMultiple!(net_14,[23,-7,-5,-10])

# Define vectors of trees/networks (have to run this again)
inferred_networks=[net_0, net_1, net_2, net_3, net_4, net_5, net_6, net_7, net_8,net_9, net_10, net_11, net_12, net_13, net_14]

starting_trees=[starting_tree_0, starting_tree_1, starting_tree_2, starting_tree_3, starting_tree_4, starting_tree_5, starting_tree_6, starting_tree_7, starting_tree_8, starting_tree_9, starting_tree_10, starting_tree_11, starting_tree_12, starting_tree_13, starting_tree_14]
### END CODE BLOCK

#_______________________________________________________________________________
#
# Plot all the output networks
#_______________________________________________________________________________

### START CODE BLOCK
# Setup the layout
gitrepo = "/home/zergling/.emacs.d/virus-project" # change this to the absolute path of your git repo
outdir_root = "$gitrepo/analysis/netrax/multistart-set1cL2R15genes/"

# Plot all networks together
R"pdf"("$outdir_root/multistart-set1cL2R15genes-all-netrax-output-networks.pdf", height=24, width=36)
R"layout(matrix(0:15, nrow=4, ncol=4, byrow=TRUE))"
R"par"(mar=[1,1,1,1],cex=1.5) 
for k in 0:14
    net=eval(Meta.parse("net_$k")) # There must be better way to do parameter expansion
    PhyloPlots.plot(net, useedgelength=false, showedgenumber=false, shownodenumber=false, showgamma=true)
    R"mtext"("NetRAX Network $k",cex=2)
end
R"dev.off()"

# Plot the best network (can't seem to get a nice picture of it though)
R"pdf"("$outdir_root/multistart-set1cL2R15genes-best-netrax-output-network.pdf", height=10, width=16)
R"layout(matrix(1:1, nrow=1, ncol=1, byrow=TRUE, cex=1.3))"
best_network=net_11 # see netrax-output.txt, which says this
PhyloPlots.plot(best_network, useedgelength=false, showedgenumber=false, shownodenumber=false, showgamma=true, arrowlen=0.1)
R"mtext"("NetRAX best network (15 genes, L2R)", cex=2)
R"dev.off()"

### END CODE BLOCK

# Plot the best network




# stopped here 2023-04-15

#_______________________________________________________________________________
#
# Plot all the starting trees 
#_______________________________________________________________________________

### START CODE BLOCK
R"png(filename='all-start-networks.png', width=36, height=24, units='cm', res=300)"

# Setup the layout
R"layout(matrix(0:15, nrow=4, ncol=4, byrow=TRUE))"
R"layout.show(n=15)" # shows the layout
R"par"(mar=[1,1,1,1]) 

# Plot each tree
for k in 0:14
    tree=eval(Meta.parse("starting_tree_$k")) # There must be better way to do parameter expansion
    PhyloPlots.plot(tree, useedgelength=false, showedgenumber=true, shownodenumber=true, showgamma=true)
    R"mtext"("Starting Tree $k")
end

R"dev.off()"
### END CODE BLOCK

# We observe that there are 6 tree topologies represented by the 15 starting trees:
# Topology 1: 0,1,2,5,7,9,12,13
# Topology 2: 3,4
# Topology 3: 6
# Topology 4: 8
# Topology 5: 10
# Topology 6: 11,14


#_______________________________________________________________________________
#
# Comparing Trees
#_______________________________________________________________________________
### BEGIN CODE BLOCK
map(i->hardwiredClusterDistance(starting_trees[i],inferred_networks[i], false), 1:15)
pcd_output_networks=[]
pcd_starting_trees=[]
for i in 1:15
    for j in (i+1):15
        append!(pcd_output_networks,
                hardwiredClusterDistance(inferred_networks[i],
                                         inferred_networks[j],
                                         false))
        append!(pcd_starting_trees,
                hardwiredClusterDistance(starting_trees[i],
                                         starting_trees[j],
                                         false))
    end
end
x=pcd_starting_trees
y=pcd_output_networks

sum(x)/length(x)
sum(y)/length(y)
length(x)

Pkg.add("PyPlot")
using Plots; pyplot()
Plots.PyPlotBackend()

Pkg.add("Distributions")
using Random, Distributions
bins = 0:25
PyPlot.hist(x, bins, alpha=0.5, label="Starting Trees")
PyPlot.hist(y, bins, alpha=0.5, label="Output Networks")
PyPlot.legend(loc="upper right")
PyPlot.show()
### END CODE BLOCK
y_three_cycles_removed
y_unprocessed


# bins = 0:25
# PyPlot.hist(y_three_cycles_removed, bins, alpha=0.5, label="After Removing 3-cycles")
# PyPlot.hist(y_unprocessed, bins, alpha=0.5, label="Before Removing 3-cycles")
# PyPlot.legend(loc="upper right")
# PyPlot.show()

# histogram(x)
# histogram(y)

# Compare the topology of the starting tree with that of the major tree of the
# corresponding NetRAX inferred network
### BEGIN CODE BLOCK
z=[]
for i in 1:15
    append!(z,hardwiredClusterDistance(majorTree(inferred_networks[i])
,starting_trees[i], false))
end
z
# Results:


### END CODE BLOCK




#______________________________________
#_______________________________________________________________________________
#
# Plot starting tree and network 4 side-by-side
#_______________________________________________________________________________

k=4
tree=eval(Meta.parse("net_$k")) # There must be better way to do parameter expansion
net=eval(Meta.parse("net_$k")) # There must be better way to do parameter expansion

# These are cosmetic adjustments for network 4
PhyloNetworks.rotate!(net_4, 17)
PhyloNetworks.rotate!(net_4, -10)
PhyloNetworks.rotate!(starting_tree_4,-2)
PhyloNetworks.rotate!(starting_tree_4,13)

# Plot them side-by-side
R"layout(matrix(1:2, 1, 2))"
R"par"(mar=[0,0,1,0]) 
PhyloPlots.plot(tree, useedgelength=false, showedgenumber=true, shownodenumber=true, showgamma=true)
R"mtext"("Starting Tree $k")           
PhyloPlots.plot(net, showedgenumber=true, shownodenumber=true, showgamma=true)
R"mtext"("Network $k")



#_______________________________________________________________________________
#
# Plotting a single network
#_______________________________________________________________________________


net=net_12
## Setup a plot of a single network
R"layout(matrix(1:1, nrow=1, ncol=1, byrow=TRUE))"
R"layout.show(n=1)" # shows the layout
PhyloPlots.plot(net, useedgelength=false, showedgenumber=true, shownodenumber=true, showgamma=true, arrowlen=0.1, style = :majortree)

? PhyloNetworks.rotate!
rotate!(net,[-11,-5,19,-14])
PhyloNetworks.rotate!(net,-5)
PhyloNetworks.rotate!(net,19)
PhyloNetworks.rotate!(net,-14)


# PhyloNetworks.rotate!(net,-18)
# map(i->PhyloNetworks.rotate!(net,i),[19,-18,-3,-16])
