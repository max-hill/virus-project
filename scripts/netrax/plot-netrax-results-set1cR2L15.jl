###
using Pkg # to use functions that manage packages
Pkg.add("PhyloNetworks")
Pkg.add("PhyloPlots")
Pkg.add("Plots")
using PhyloNetworks
using PhyloPlots
using Plots

# For plotting networks and trees side-by-side
# Pkg.build("RCall")
Pkg.add("RCall")
using RCall
# displayedTrees(net0,0.41) |> length
###
#_______________________________________________________________________________
#
# Define starting trees and inferred networks.
#_______________________________________________________________________________
#_______________________________________________________________________________
#
# Define networks
#_______________________________________________________________________________

#=
The following are the 15 networks obtained from the the run
multistart-set1cR2L15genes, along with the 15 rfnet starting trees. Each
network was obtained by running netrax with the corresponding start tree.

We had to rename the hybrid nodes so that they start with a character not 0.
To do this, I replaced '#' with '#H'

The julia code in the next code block was generated by running the following
shell commands from the directory /analysis/netrax/multistart-set1cR2L15genes/multistart-set1cR2L15genes_subruns/,
and then renaming the hybrid nodes by replacing all instances of '#' with '#H'

for i in {0..14}
    do
        starting_tree=$(cat run_${i}_start_network.nw)
        best_network=$(cat run_${i}_inferred_network.nw)
        echo "starting_tree_${i}=readTopology(\"${starting_tree}\")"
        echo ""
        echo "net_${i}=readTopology(\"${best_network}\")"
        echo ""
done
=#

### START CODE BLOCK
starting_tree_0=readTopology("(((((((C33:1e-06,(C46:1e-06,Titanium_IBR_MLV_vaccine:0.0002351886)44:1e-06):0.0001300298,Cooper:0.0022268874)65:0.007527223,216_II:0.0069811916)100:0.0084889867,SP1777:0.0032412322)69:0.0026135865,K22:0.0045245337)53:0.0026564084,B589:0.0024952024)38:0,BHV5:0.2734696606)Root;")

net_0=readTopology("((BHV5:0.12619)#H2:0.140069::0.731698,((B589:0.00181813,((((((216_II:5.50148e-05)#H0:3.90252e-05::0.2544,#H2:0.000716654::0.268302):0.00413044,((((Titanium_IBR_MLV_vaccine:8.02143e-05,(C46:1.77785e-05,(Cooper:0.000179276)#H3:1e-06::0.763603):7.68705e-05)44:0.00014008,C33:0.000203221):0.000768767,(#H0:1e-06::0.7456,#H3:0.000535182::0.236397)65:0.00201397):0.00237893)#H4:0.00128345::0.23654)100:0.00599733,#H4:1e-06::0.76346):0.00207399,(SP1777:0.00160735)#H5:0.000923499::0.304192)69:0.000906131)#H1:1e-06::0.387269):0.000212161,((((K22:0.00161465)#H6:0.00113471::0.526866,#H1:0.000588145::0.612731)53:0.000461721,#H5:1e-06::0.695808):0.00079468,#H6:1e-06::0.473134):0.000335602)38:0.000493332)Root;")

starting_tree_1=readTopology("((((C33:0.0003657968,((C46:0.0001182044,Cooper:0.0017347932)97:0.0003969047,Titanium_IBR_MLV_vaccine:0.0001152638)66:0.0002571062):0.0012917421,216_II:0.002675558)99:0.0085354032,((SP1777:0.0044291544,B589:0.0058198014)38:0.0012429256,K22:0.0040412521)68:0.0034036631)100:0,BHV5:0.2286849761)Root;")

net_1=readTopology("((BHV5:0.124839)#H0:0.136716::0.861529,(((#H0:1e-06::0.138471,(216_II:0.00193626)#H1:0.00205153::0.223771):0.00205153,((((Titanium_IBR_MLV_vaccine:8.10411e-05,((C46:1.43573e-05,(Cooper:2.86685e-05)#H4:0.00221585::0.24752):3.25393e-06,#H4:1e-06::0.75248):9.40565e-05)66:0.000151617,C33:0.000199541):0.00116032,#H1:1e-06::0.776229)97:0.00300027)#H2:0.00122369::0.236986)100:0.00156605,((((K22:0.00218232,(SP1777:0.00056688)#H3:0.00157749::0.692311):0.000533647,B589:0.00278867)68:0.00156706,#H3:0.00163379::0.307689)38:0.00104548,#H2:1e-06::0.763014):0.00572778)99:0.00573669)Root;")

starting_tree_2=readTopology("((((C33:0.0002625469,((C46:2.0647e-06,Cooper:0.009497229)53:0.0007874973,Titanium_IBR_MLV_vaccine:0.000237284)32:0.0001217236):0.0035454854,216_II:0.0034660298)89:0.005316952,(SP1777:0.0044316262,(B589:0.005981426,K22:0.0040910683)77:0.0023379189)99:0.0099540932)86:0,BHV5:0.2875413558)Root;")

net_2=readTopology("((BHV5:0.121381)#H0:0.139236::0.861804,(((((((B589:0.00179851,(((#H0:1e-06::0.138196,(216_II:1e-06)#H1:0.00204987::0.365028):0.00204987,(((((Cooper:0.000167471)#H5:0.000503911::0.163911,#H1:1e-06::0.634972)53:0.0017906,(((Titanium_IBR_MLV_vaccine:8.10577e-05,(C46:1.79017e-05,#H5:1e-06::0.836089):7.77063e-05)32:0.000142504,C33:0.000204578):0.000379659)#H7:0.00030254::0.737027):0.00179832,#H7:1e-06::0.262973):0.00121217)#H2:0.0012491::0.588191)86:0.00269066)#H3:1e-06::0.504953):0.000578986,(K22:0.00161825)#H6:1e-06::0.464591):0.000677723,(SP1777:0.00166198)#H4:1e-06::0.723407):0.000661394,#H6:0.0011443::0.535409)77:0.00176223,#H4:0.00102935::0.276593)99:0.000755302,#H2:1e-06::0.411809):0.00514054,#H3:0.000780615::0.495047)89:0.00577434)Root;")

starting_tree_3=readTopology("(((((C33:0.0001142862,(C46:1e-06,Titanium_IBR_MLV_vaccine:0.0002286335)51:1e-06):0.0003563443,Cooper:0.003475494)72:0.0068979294,216_II:0.0050312252)100:0.0042987966,((SP1777:0.0031623414,B589:0.0047054003)42:0.0021344753,K22:0.0023084458)42:0.0038122755)95:0,BHV5:0.2034773064)Root;")

net_3=readTopology("((BHV5:0.121341)#H0:0.136528::0.790055,(((#H0:1e-06::0.209945,(216_II:0.00192107)#H1:0.00205254::0.215804):0.00205254,((((Titanium_IBR_MLV_vaccine:8.01789e-05,((C46:1.20193e-05,(Cooper:0.000519624)#H4:0.000501752::0.239919)72:9.90513e-06,#H4:1e-06::0.760081):0.000111851)51:0.000150063,C33:0.000198597):0.00116194,#H1:1e-06::0.784196):0.00301754)#H2:0.00122397::0.236984)95:0.00156406,((((K22:0.00216426,(SP1777:0.000555995)#H3:0.00157753::0.694187):0.000530516,B589:0.00276773)42:0.00153748,#H3:0.00162792::0.305813)42:0.00100147,#H2:1e-06::0.763016):0.00571366)100:0.00644012)Root;")

starting_tree_4=readTopology("((((C33:0.000615728,((C46:1e-06,Cooper:0.0001023683)82:0.0001024164,Titanium_IBR_MLV_vaccine:1e-06)64:0.0001021668):0.0006253481,216_II:0.0018592762)99:0.0042006898,((SP1777:0.0017752271,K22:0.0014475968)93:0.0007291163,B589:0.0013576601)95:0.0017810503)100:0,BHV5:0.1043735835)Root;")

net_4=readTopology("(((BHV5:0.0936714)#H1:0.0870438::0.934345)#H0:0.100366::0.296081,((((216_II:0.000400343,#H1:1e-06::0.0656549):0.00120505,((((Titanium_IBR_MLV_vaccine:8.07777e-05,((C46:1.47076e-05,(Cooper:2.61609e-05)#H5:0.00238777::0.24752):2.13231e-06,#H5:1e-06::0.75248):9.00765e-05)64:0.000148727,C33:0.000194428):0.00111596,(((((((B589:0.00191315)#H4:0.0014398::0.43358,(K22:0.000733966)#H6:0.00128343::0.522928)95:0.000904313,SP1777:0.00207564)93:0.000634144,#H4:1e-06::0.56642):0.000410679,#H6:0.00125353::0.477072):0.00150317,#H0:1e-06::0.703919):0.0037072)#H3:1e-06::0.734075)82:0.00045569)#H2:1e-06::0.829301):0.00442598,#H3:0.000502845::0.265925)100:0.00152103,#H2:0.0024771::0.170699)99:0.00152103)Root;")

starting_tree_5=readTopology("((((C33:0.0002032305,((C46:1e-06,Cooper:1e-06)36:1e-06,Titanium_IBR_MLV_vaccine:0.000101593)47:0.0001000133):0.0025932323,216_II:0.0022481473)100:0.002716683,((SP1777:0.0016807216,B589:0.0015885973)54:0.0003880636,K22:0.0010718043)86:0.0010185616)100:0,BHV5:0.0752352597)Root;")

net_5=readTopology("(((BHV5:0.0954894)#H1:0.0874879::0.934345)#H0:0.0940973::0.255349,((((((Titanium_IBR_MLV_vaccine:8.09432e-05,((C46:1.49942e-05,(Cooper:2.41803e-05)#H5:0.00269421::0.24752)100:1.54785e-06,#H5:1e-06::0.75248):8.84647e-05)47:0.00014811,C33:0.000195131):0.00118966,((216_II:0.000371488,#H1:1e-06::0.0656549):0.00173966)#H2:2e-06::0.797611):0.000246552,(((((((B589:0.00191021)#H4:0.00144557::0.42493,(K22:0.000867314)#H6:0.00100504::0.599256)86:0.000899783,SP1777:0.00209784)54:0.000616061,#H4:1e-06::0.57507):0.000491846,#H6:0.00122971::0.400744):0.00138947,#H0:1e-06::0.744651):0.00315997)#H3:0.000225291::0.741823)36:0.0043285,#H2:0.00218546::0.202389)100:0.00151727,#H3:1e-06::0.258177):0.00151727)Root;")

starting_tree_6=readTopology("((((C33:0.0002031667,((C46:1e-06,Titanium_IBR_MLV_vaccine:1e-06)25:1e-06,Cooper:1e-06)70:0.0001013929):0.0010081631,((SP1777:0.000203691,B589:0.0016278918)97:0.0004302877,K22:0.0014018705)100:0.0025657227)100:0.0087892627,216_II:0.0013144984)100:0,BHV5:0.0626520281)Root;")

net_6=readTopology("((BHV5:0.119368)#H0:0.137111::0.790044,(((#H0:1e-06::0.209956,(216_II:0.00164871)#H1:1e-06::0.294458):0.00310417,(((((((Titanium_IBR_MLV_vaccine:8.04127e-05,(C46:1.78724e-05,(Cooper:0.000164197)#H4:1e-06::0.836089):7.71335e-05)25:0.000141039,C33:0.000203246):0.000196703)#H5:1e-06::0.778833,#H4:0.00203451::0.163911):0.000835958,#H1:1e-06::0.705542):0.00203246,#H5:0.000167005::0.221167)70:0.00167899)#H2:0.00122521::0.237002)100:0.00156896,((((K22:0.00222582,((B589:0.00190785)#H6:0.00138208::0.35915,(SP1777:0.000646198)#H3:0.000788728::0.753739)100:0.000914018):0.000527609,#H6:1e-06::0.64085):0.00121876,#H3:0.00164612::0.246261)97:0.000896121,#H2:1e-06::0.762998):0.00615378)100:0.00525305)Root;")

starting_tree_7=readTopology("((((C33:1e-06,(C46:1e-06,(Titanium_IBR_MLV_vaccine:1e-06,Cooper:1e-06)25:1e-06)94:0.0002038071):0.0009193853,216_II:0.0013280219)100:0.0037775962,(SP1777:0.0012488841,(B589:0.0012269942,K22:0.0013302185)98:0.0008146937)92:0.001245704)100:0,BHV5:0.1123422772)Root;")

net_7=readTopology("(((((((((B589:0.00175238,(((((((C46:1.36492e-05,(Cooper:3.02316e-05)#H5:0.00196627::0.24752)100:3.80043e-06,#H5:1e-06::0.75248):9.31396e-05,Titanium_IBR_MLV_vaccine:7.85789e-05)25:0.000147199,C33:0.000194694):0.00110808,(216_II:0.000993445)#H1:0.00080478::0.803326)94:0.0020926)#H2:0.00264288::0.578478)#H4:1e-06::0.551368):0.000438912,(K22:0.00144806)#H7:1e-06::0.433251):0.000704975,(SP1777:0.00171901)#H6:1e-06::0.819886):0.000956475,#H7:0.00109827::0.566749)98:0.00218165,#H6:0.00100352::0.180114)92:0.000676161,#H2:1e-06::0.421522):0.00361637)#H0:1e-06::0.467311,(BHV5:0.0518197)#H3:0.100394::0.343356):0.10318,(((#H0:0.00357526::0.532689,#H1:0.00571008::0.196674)100:0.00109024,#H4:1e-06::0.448632):0.0508127,#H3:1e-06::0.656644):0.0290515)Root;")

starting_tree_8=readTopology("(((((((C33:0.0003087007,(C46:1e-06,Cooper:1e-06)87:0.0001028663):1e-06,Titanium_IBR_MLV_vaccine:0.0002057352)43:0.0008524454,216_II:0.0033080679)85:0.0040734006,B589:0.0011299851)99:0.0003898718,SP1777:0.0014633871)77:0.000105181,K22:0.0005969984)60:0,BHV5:0.1007275617)Root;")

net_8=readTopology("(((BHV5:0.0974157)#H1:0.0881731::0.794521)#H0:0.116731::0.333512,(((K22:0.00225976,(((((((216_II:1e-06)#H3:0.00193668::0.265278,#H1:1e-06::0.205479):0.00299502,((((#H3:1e-06::0.734722,(Cooper:0.000154325)#H5:0.000496143::0.163372)87:0.00202827,(((Titanium_IBR_MLV_vaccine:7.92196e-05,(C46:1.75911e-05,#H5:1e-06::0.836628):7.61334e-05)43:0.000138672,C33:0.000201121):0.000404236)#H7:0.000380813::0.860273):0.00258021,#H7:1e-06::0.139727):0.00109813)#H4:0.00122344::0.239919)85:0.00869832,#H4:2e-06::0.760081):0.000268755,#H0:0.0011457::0.666488):0.000483011,(SP1777:0.000632119)#H6:0.00211547::0.310174)77:0.00113677,(B589:0.00175071)#H2:1e-06::0.573562):0.000525595)60:0.00127816,#H6:1e-06::0.689826):0.000651015,#H2:0.000799351::0.426438)99:1e-06)Root;")

starting_tree_9=readTopology("((((C33:0.0001015739,(C46:0.0001015591,(Titanium_IBR_MLV_vaccine:1e-06,Cooper:1e-06)63:1e-06)74:0.0001015557):0.0005072462,216_II:0.0010199172)99:0.0021773525,(SP1777:0.000904965,(B589:0.0014357409,K22:0.0014201476)42:0.0001164871)57:0.0011999486)100:0,BHV5:0.0891386628)Root;")

net_9=readTopology("(((BHV5:0.0390353)#H5:0.0555785::0.782359)#H0:0.149704::0.337139,((((((((((B589:0.00153367,((((((Cooper:0.000155872)#H6:0.00229545::0.163911,((((C46:1.75072e-05,#H6:1e-06::0.836089):7.60583e-05,Titanium_IBR_MLV_vaccine:7.92793e-05)63:0.000139213,C33:0.000200245):5.81137e-05)#H7:0.000133228::0.789783)99:0.000818166,(216_II:0.000780226)#H1:0.000803831::0.729136)74:0.00194565,#H7:0.000357991::0.210217):0.00103517)#H3:0.00161703::0.489333)#H2:0.00139183::0.436821)100:0.000738908,(K22:0.00148656)#H8:1e-06::0.392943):0.000584183,(SP1777:0.00170594)#H4:1e-06::0.740095):0.000667824,#H8:0.00110066::0.607057)42:0.0018778,#H4:0.00101433::0.259905)57:0.000263177,#H3:1e-06::0.510667):0.00921674,#H2:1e-06::0.563179):0.000582339,#H1:0.00369284::0.270864):0.066104,#H5:1e-06::0.217641):1e-06,#H0:1e-06::0.662861):1e-06)Root;")

starting_tree_10=readTopology("((((C33:0.0002233097,((C46:1e-06,Titanium_IBR_MLV_vaccine:0.0001115334)52:1e-06,Cooper:1e-06)98:0.0004683542):0.0009491318,216_II:0.0016738696)100:0.0051141158,(SP1777:0.0019758473,(B589:0.0021385803,K22:0.0009202067)67:0.000767774)84:0.0023672377)100:0,BHV5:0.1473276224)Root;")

net_10=readTopology("(((BHV5:0.120344)#H0:0.0569146::0.934345)#H1:0.0972263::0.313584,((((216_II:0.000405658,#H0:1e-06::0.0656549):0.0012651,((((Titanium_IBR_MLV_vaccine:8.10188e-05,((C46:1.22155e-05,(Cooper:0.000510296)#H5:0.000499518::0.263042)98:9.14252e-06,#H5:1e-06::0.736958):0.000108989)52:0.000148145,C33:0.000195153):0.00110597,(((((((B589:0.001913)#H4:0.00145271::0.413824,(K22:0.000870973)#H6:0.00100698::0.599658)67:0.000902997,SP1777:0.00210202)84:0.000608786,#H4:1e-06::0.586176):0.000482886,#H6:0.00124525::0.400342):0.0013427,#H1:2e-06::0.686416):0.00364739)#H3:1e-06::0.72706):0.000352977)#H2:1e-06::0.829071):0.00444182,#H2:0.00507939::0.170929)100:0.000336523,#H3:0.000772385::0.27294)100:0.000336523)Root;")

starting_tree_11=readTopology("((((C33:0.0001024703,((C46:1e-06,Cooper:1e-06)91:0.0001023443,Titanium_IBR_MLV_vaccine:1e-06)74:0.0001022286):0.0007389976,216_II:0.0012348396)100:0.0019959137,((SP1777:0.0017687388,B589:0.002440221)53:0.0002946988,K22:0.0019291085)100:0.0036377349)99:0,BHV5:0.10281654)Root;")

net_11=readTopology("((((((BHV5:0.0931247)#H0:2e-06::0.458124,(216_II:1e-06)#H1:0.00285362::0.26283):0.00285362,((((#H1:0.000804893::0.73717,(Cooper:0.000173909)#H5:0.000351459::0.163911):0.00119476,(((Titanium_IBR_MLV_vaccine:7.91854e-05,(C46:1.75397e-05,#H5:1e-06::0.836089):7.5462e-05)74:0.000138441,C33:0.000199663):0.000420573)#H6:0.000376209::0.860773)100:0.00268587,#H6:1e-06::0.139227):0.000778087)#H2:0.00180355::0.269641)99:0.0030124,((((((K22:0.00179325,(B589:0.00212066)#H7:1e-06::0.629435):0.000316673,(SP1777:0.000131448)#H4:0.00153308::0.743081):0.00130293,#H7:0.0013548::0.370565)100:0.00109632,#H2:1e-06::0.730359):0.000666629,#H4:0.0031412::0.256919)53:0.00287432)#H3:0.00318167::0.534684):0.128445,#H3:1e-06::0.465316):0.100762,#H0:1e-06::0.541876)Root;")

starting_tree_12=readTopology("((((((C33:0.000312141,((C46:1e-06,Cooper:0.0001037312)90:0.0001036305,Titanium_IBR_MLV_vaccine:1e-06)96:0.0003112091):0.0008608687,216_II:0.0004913378)100:0.0049560384,B589:0.0017748159)100:0.001674664,SP1777:0.002629051)96:0.0014648497,K22:0.00137952)83:0,BHV5:0.1164943392)Root;")

net_12=readTopology("(((BHV5:0.102571)#H1:0.0838941::0.791618)#H0:0.106333::0.328533,(((K22:0.00226071,(((((((216_II:1e-06)#H3:0.00194118::0.265992,#H1:1e-06::0.208382):0.00300749,((((#H3:1e-06::0.734008,(Cooper:0.000154381)#H5:0.00049668::0.163435)90:0.00202869,(((Titanium_IBR_MLV_vaccine:7.92563e-05,(C46:1.76087e-05,#H5:1e-06::0.836565):7.61524e-05)96:0.000138659,C33:0.000201185):0.000404061)#H7:0.000380769::0.860206):0.00258106,#H7:1e-06::0.139794):0.00110217)#H4:0.00122403::0.239919)100:0.00868507,#H4:2e-06::0.760081):0.000268077,#H0:0.00112355::0.671467):0.000484459,(SP1777:0.000598751)#H6:0.00220191::0.309223)96:0.0011352,(B589:0.00174771)#H2:1e-06::0.571257):0.000525961)83:0.00130599,#H6:1e-06::0.690777):0.000659867,#H2:0.000792492::0.428743)100:4.20449e-05)Root;")

starting_tree_13=readTopology("((((C33:0.0001020612,(C46:1e-06,(Titanium_IBR_MLV_vaccine:1e-06,Cooper:1e-06)26:1e-06)72:0.0001020515):0.0005755794,216_II:0.001781806)98:0.0032425058,((SP1777:0.002615214,K22:0.0023197111)38:0.0006857879,B589:0.0024953407)99:0.0027915541)100:0,BHV5:0.0887359249)Root;")

net_13=readTopology("(((BHV5:0.120281)#H0:0.0568322::0.934345)#H1:0.0976042::0.314094,((((216_II:0.000404314,#H0:1e-06::0.0656549):0.0012739,((((((C46:1.22152e-05,(Cooper:0.000510305)#H5:0.000499466::0.263045)72:9.14122e-06,#H5:1e-06::0.736955):0.00010898,Titanium_IBR_MLV_vaccine:8.10166e-05)26:0.000148132,C33:0.000195147):0.00110692,(((((((B589:0.00191316)#H4:0.00145252::0.412845,(K22:0.000871035)#H6:0.00100685::0.599636)99:0.000901968,SP1777:0.00210176)38:0.000609877,#H4:1e-06::0.587155):0.000481757,#H6:0.00124522::0.400364):0.00134789,#H1:2e-06::0.685906):0.00365771)#H3:1e-06::0.727156):0.00034922)#H2:1e-06::0.829077):0.00436159,#H2:0.00507564::0.170923)98:0.000296835,#H3:0.000772646::0.272844)100:0.000296835)Root;")

starting_tree_14=readTopology("((((C33:1e-06,((C46:1e-06,Cooper:1e-06)92:0.0002513173,Titanium_IBR_MLV_vaccine:1e-06)78:0.0002509889):0.0012478996,216_II:0.0025308014)99:0.0031759821,((SP1777:0.0011817551,B589:0.0025088871)84:0.0005848527,K22:0.002518948)95:0.0026274862)98:0,BHV5:0.1769139559)Root;")

net_14=readTopology("((BHV5:0.120902)#H0:0.1372::0.790038,(((#H0:1e-06::0.209962,(216_II:0.00161778)#H1:1e-06::0.294802):0.00362402,(((((((Titanium_IBR_MLV_vaccine:8.04894e-05,(C46:1.78742e-05,(Cooper:0.00016168)#H4:1e-06::0.836089):7.71599e-05)78:0.000141208,C33:0.000203321):0.000241993)#H5:1e-06::0.785719,#H4:0.00219405::0.163911)92:0.000827981,#H1:1e-06::0.705198):0.00192591,#H5:1e-06::0.214281):0.00178089)#H2:0.00122327::0.236994)99:0.00212129,((((K22:0.00223202,((B589:0.00190352)#H6:0.00138104::0.386611,(SP1777:0.000643752)#H3:0.000788733::0.754304)95:0.000914573):0.000533897,#H6:1e-06::0.613389):0.00120964,#H3:0.00164231::0.245696)84:0.000909446,#H2:1e-06::0.763006):0.00557746)98:0.00212129)Root;")

# Define vectors of trees/networks
inferred_networks=[net_0, net_1, net_2, net_3, net_4, net_5, net_6, net_7, net_8,net_9, net_10, net_11, net_12, net_13, net_14]

starting_trees=[starting_tree_0, starting_tree_1, starting_tree_2, starting_tree_3, starting_tree_4, starting_tree_5, starting_tree_6, starting_tree_7, starting_tree_8, starting_tree_9, starting_tree_10, starting_tree_11, starting_tree_12, starting_tree_13, starting_tree_14]

# Remove all three cycles from the networks
for network in inferred_networks
    shrink3cycles!(network,false)
end


function rotateMultiple!(H::HybridNetwork,V::Vector{Int64})
    for v in V
        PhyloNetworks.rotate!(H,v)
    end
    #PhyloPlots.plot(H, useedgelength=false, showedgenumber=true, shownodenumber=true, showgamma=true, arrowlen=0.1)
end

# # workspace
# PhyloPlots.plot(net, useedgelength=false, showedgenumber=true, shownodenumber=true, showgamma=true, arrowlen=0.1)
# PhyloPlots.plot(net, useedgelength=false, showedgenumber=true, shownodenumber=true, style=:majortree, showgamma=true, arrowlen=0.1)



# Reroot the output networks as closely to BHV5 as possible
PhyloNetworks.rootatnode!(net_4,-7)
PhyloNetworks.rootatnode!(net_5,21)
PhyloNetworks.rootatnode!(net_7,-23)
PhyloNetworks.rootatnode!(net_8,-10)
PhyloNetworks.rootatnode!(net_9,"BHV5")
PhyloNetworks.rootatnode!(net_10,-10)
PhyloNetworks.rootatnode!(net_12,-10)
PhyloNetworks.rootatnode!(net_13,-10)

# Untangle the networks so the hybridizations are visible
rotateMultiple!(net_0,[-14,-8,21,-10,-13])
rotateMultiple!(net_1,[11,-15,18])
rotateMultiple!(net_2,[8,11,-23])
rotateMultiple!(net_3,[-15,-9,18])
rotateMultiple!(net_4,[-7,-19,-8])
rotateMultiple!(net_5,[21,-19,-15,-8,22])
rotateMultiple!(net_6,[-17,-10,-19,-11,9,-15])
rotateMultiple!(net_7,[18,19,-8,-9])
rotateMultiple!(net_8,[-6,19,23,-11,-17,9,-21])
rotateMultiple!(net_9,[23,-13,-17,12,-22,9])
rotateMultiple!(net_10,[-7,-8,-18,18,16])
rotateMultiple!(net_11,[-20,20,-23,9,-17])
rotateMultiple!(net_12,[-8,23,-11,-17,9,-21])
rotateMultiple!(net_13,[-7,-18,16,-8])
rotateMultiple!(net_14,[-17,20,21,-10,12,9,-15])
# Define vectors of trees/networks (have to run this again)
inferred_networks=[net_0, net_1, net_2, net_3, net_4, net_5, net_6, net_7, net_8,net_9, net_10, net_11, net_12, net_13, net_14]

starting_trees=[starting_tree_0, starting_tree_1, starting_tree_2, starting_tree_3, starting_tree_4, starting_tree_5, starting_tree_6, starting_tree_7, starting_tree_8, starting_tree_9, starting_tree_10, starting_tree_11, starting_tree_12, starting_tree_13, starting_tree_14]
### END CODE BLOCK

#_______________________________________________________________________________
#
# Plot all the output networks
#_______________________________________________________________________________

### START CODE BLOCK
# Setup the layout
gitrepo = "/home/zergling/.emacs.d/virus-project" # change this to the absolute path of your git repo
outdir_root = "$gitrepo/analysis/netrax/multistart-set1cR2L15genes/"


R"pdf"("$outdir_root/multistart-set1cR2L15genes-all-netrax-output-networks.pdf", height=24, width=36)
R"layout(matrix(0:15, nrow=4, ncol=4, byrow=TRUE))"
#R"layout.show(n=15)" # shows the layout
R"par"(mar=[1,1,1,1],cex=1.5) 

# Plot each network
for k in 0:14
    net=eval(Meta.parse("net_$k")) # There must be better way to do parameter expansion
    PhyloPlots.plot(net, useedgelength=false, showedgenumber=false, shownodenumber=false, showgamma=true)
    R"mtext"("NetRAX Network $k", cex=2)
end
R"dev.off()"


# Plot the best network (can't seem to get a nice picture of it though)
R"pdf"("$outdir_root/multistart-set1cR2L15genes-best-netrax-output-network.pdf", height=10, width=16)
R"layout(matrix(1:1, nrow=1, ncol=1, byrow=TRUE, cex=1.3))"
#R"layout.show(n=1)" # shows the layout
best_network=net_7 # see netrax-output.txt, which says this
PhyloPlots.plot(best_network, useedgelength=false, showedgenumber=false, shownodenumber=false, showgamma=true, arrowlen=0.1)
R"mtext"("NetRAX best network (15 genes, R2L)", cex=2)
R"dev.off()"

### END CODE BLOCK

# Plot the best network




# stopped here 2023-04-15

#_______________________________________________________________________________
#
# Plot all the starting trees 
#_______________________________________________________________________________

### START CODE BLOCK
R"png(filename='all-start-networks.png', width=36, height=24, units='cm', res=300)"

# Setup the layout
R"layout(matrix(0:15, nrow=4, ncol=4, byrow=TRUE))"
R"layout.show(n=15)" # shows the layout
R"par"(mar=[1,1,1,1]) 

# Plot each tree
for k in 0:14
    tree=eval(Meta.parse("starting_tree_$k")) # There must be better way to do parameter expansion
    PhyloPlots.plot(tree, useedgelength=false, showedgenumber=true, shownodenumber=true, showgamma=true)
    R"mtext"("Starting Tree $k")
end

R"dev.off()"
### END CODE BLOCK

# We observe that there are 6 tree topologies represented by the 15 starting trees:
# Topology 1: 0,1,2,5,7,9,12,13
# Topology 2: 3,4
# Topology 3: 6
# Topology 4: 8
# Topology 5: 10
# Topology 6: 11,14


#_______________________________________________________________________________
#
# Comparing Trees
#_______________________________________________________________________________
### BEGIN CODE BLOCK
map(i->hardwiredClusterDistance(starting_trees[i],inferred_networks[i], false), 1:15)
pcd_output_networks=[]
pcd_starting_trees=[]
for i in 1:15
    for j in (i+1):15
        append!(pcd_output_networks,
                hardwiredClusterDistance(inferred_networks[i],
                                         inferred_networks[j],
                                         false))
        append!(pcd_starting_trees,
                hardwiredClusterDistance(starting_trees[i],
                                         starting_trees[j],
                                         false))
    end
end
x=pcd_starting_trees
y=pcd_output_networks

sum(x)/length(x)
sum(y)/length(y)
length(x)

Pkg.add("PyPlot")
using Plots; pyplot()
Plots.PyPlotBackend()

Pkg.add("Distributions")
using Random, Distributions
bins = 0:25
PyPlot.hist(x, bins, alpha=0.5, label="Starting Trees")
PyPlot.hist(y, bins, alpha=0.5, label="Output Networks")
PyPlot.legend(loc="upper right")
PyPlot.show()
### END CODE BLOCK
y_three_cycles_removed
y_unprocessed


# bins = 0:25
# PyPlot.hist(y_three_cycles_removed, bins, alpha=0.5, label="After Removing 3-cycles")
# PyPlot.hist(y_unprocessed, bins, alpha=0.5, label="Before Removing 3-cycles")
# PyPlot.legend(loc="upper right")
# PyPlot.show()

# histogram(x)
# histogram(y)

# Compare the topology of the starting tree with that of the major tree of the
# corresponding NetRAX inferred network
### BEGIN CODE BLOCK
z=[]
for i in 1:15
    append!(z,hardwiredClusterDistance(majorTree(inferred_networks[i])
,starting_trees[i], false))
end
z
# Results:


### END CODE BLOCK




#______________________________________
#_______________________________________________________________________________
#
# Plot starting tree and network 4 side-by-side
#_______________________________________________________________________________

k=4
tree=eval(Meta.parse("net_$k")) # There must be better way to do parameter expansion
net=eval(Meta.parse("net_$k")) # There must be better way to do parameter expansion

# These are cosmetic adjustments for network 4
PhyloNetworks.rotate!(net_4, 17)
PhyloNetworks.rotate!(net_4, -10)
PhyloNetworks.rotate!(starting_tree_4,-2)
PhyloNetworks.rotate!(starting_tree_4,13)

# Plot them side-by-side
R"layout(matrix(1:2, 1, 2))"
R"par"(mar=[0,0,1,0]) 
PhyloPlots.plot(tree, useedgelength=false, showedgenumber=true, shownodenumber=true, showgamma=true)
R"mtext"("Starting Tree $k")           
PhyloPlots.plot(net, showedgenumber=true, shownodenumber=true, showgamma=true)
R"mtext"("Network $k")



#_______________________________________________________________________________
#
# Plotting a single network
#_______________________________________________________________________________


net=net_12
## Setup a plot of a single network
R"layout(matrix(1:1, nrow=1, ncol=1, byrow=TRUE))"
R"layout.show(n=1)" # shows the layout
PhyloPlots.plot(net, useedgelength=false, showedgenumber=true, shownodenumber=true, showgamma=true, arrowlen=0.1, style = :majortree)

? PhyloNetworks.rotate!
rotate!(net,[-11,-5,19,-14])
PhyloNetworks.rotate!(net,-5)
PhyloNetworks.rotate!(net,19)
PhyloNetworks.rotate!(net,-14)


# PhyloNetworks.rotate!(net,-18)
# map(i->PhyloNetworks.rotate!(net,i),[19,-18,-3,-16])
